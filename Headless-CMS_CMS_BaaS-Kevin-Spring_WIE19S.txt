CMSEtt traditionellt CMS är ett Content Managing System som tillåter användare med begränsad kunskap inom webbutveckling att hantera hemsidor. Med ett enkelt gränssnitt med tydliga templates kan användare följa riktlinjer och lägga till, uppdatera och radera innehåll på sån hemsida. Innehållet förvaras i CMS:et databas och presenteras till användaren utifrån vilka templates och plug-ins användaren har installerat till hemsidans design och layout. Hela processen kan göras utan att behöva röra kod.Hemsidans design och layout i traditionella CMS är djupt anknutna till hur sidan fungerar och dess layout, vilket kan betyda att ändringar till hemsidans layout kan kräva användaren att byta ut CMS:et totalt.Headless CMSEtt headless CMS hanterar ditt innehåll men har inget gränssnitt som presenterar innehållet. Presentationen hanteras av webbutvecklare genom att hämta data från ett API från CMS:et som kan vara i t.ex. json-format. Det finns inga restriktioner till vilket kodspråk eller framework som ska användas, inte heller några templates med diverse regler som måste följas. Detta tillåter utvecklare att skapa hemsidor med mer flexibilitet i utvecklingen av hemsidan och även ett utrymme för en unik design.  Med ett Headless CMS kan innehåll vara mer flexibelt till fler plattformar eftersom man har mer kontroll över sin design och dess layout. Till skillnad från ett traditionellt CMS där layouten av hemsidan och dess innehåll är sammanflätande och kan stöta på problem att visas korrekt på olika plattformar. Backend-as-a-ServiceBackend-as-a-Service främsta mål är att eliminera behovet av att själv hantera en databas och motsvarande hårdvara. Istället erbjuder dessa BaaS-system utvecklare att koppla upp sig till desa tjänster via API:er och har cloud computing-lösningar som t.ex Googles Firebase cloud storage, som är en real-tid NoSQL databas. Vilket gynnar företag som har ett behov av scaling i sin backend. Dessa BaaS-tjänster fungerar även med fler system som Ios, Andriod m.fl. Skillnaden mellan CMS och BaaS?Ett CMS erbjuder användare att hantera innehåll på sin sida utan att behöva dyka in i de många komplexa lager som backend kan bestå utav. Ett CMS bör användas när enklare behov som att redigera ett fåtal produkter, eller vilket innehåll som ska visas på respektive sida. I många fall täcker ett CMS de frontend-behoven för en sida och kan även lagra mindre mängder av data i sin databas.Däremot bör ett BaaS-system användas om något mer känsligt ska lagras i en databas eftersom det har bättre säkerhet. BaaS har ofta bättre scaling vilket gör det enklare att lagra information som kanske kommer att bli mycket större i framtiden.  I vilket sammanhang ska man använda Headless CMS och traditionellt CMS? Valet av ett Headless- och traditionellt CMS beror främst på om det existerar en planerad frontendutveckling eller om det ska vara enkelt för en användare att kunna hantera hemsidan via ett UI. Om det ska drivas en enklare blogg skulle ett traditionellt CMS täcka alla behov för användaren. Ska det däremot utvecklas en hemsida med unik design, layout och med unik funktionalitet bör ett Headless CMS väljas som utvecklas av Frontendutveklare.